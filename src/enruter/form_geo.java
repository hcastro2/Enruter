/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enruter;
import static enruter.dirTest.listaDirecciones;
import java.awt.Color;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.AncestorListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author 57321
 */
public class form_geo extends javax.swing.JFrame implements ActionListener {
  String texto;
  static String datoGlobal;
    public form_geo() {
        initComponents();
    //lbProcesando.setVisible(false);//  ajustaricon();
      this.getContentPane().setBackground(Color.white);
      this.Home.setBackground(Color.white);
        btn_procesar.addActionListener(this);
        btn_open1.addActionListener(this);
        anadeListenerAlModelo(tabla1);
        
    }
public static void runing(){
   
            //lb_zona.setText(datoGlobal); 
    
}

    
     @Override
    public void actionPerformed(ActionEvent ae) {
        if (ae.getSource()==btn_procesar){
             agregarTotxt(btn_procesar.getText());	
         }
        if (ae.getSource()==btn_open1){
               ListaDirecciones l = new ListaDirecciones();
              try {
                  l.importar();
              } catch (IOException ex) {
                  Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex);
              }
         }
         if (ae.getSource()==tabla1){
             JOptionPane.showMessageDialog(null, "");	
         }
      }
    
     
    public void agregarTotxt(String a){
        String valor = a;
        txt_result.setText(texto);
        
    } 
    public void procesar(){
        descomponer d = new descomponer();
        Zonal z = new Zonal();
        this.texto = txt_entrada.getText();
        if((texto.equals("")!=true)){
        txt_result.setText(d.texting(texto));
        lb_codigo.setText(d.codigo());//FUNCION QUE AGREGA EL CODIGO O ID_DIRECCION
        z.calcZona(lb_codigo.getText());//FUNCION QUE GENERA LA ZONA
        lb_zona.setText(z.getZona());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        lb_zona = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txt_entrada = new javax.swing.JTextField();
        txt_result = new javax.swing.JTextField();
        lb_codigo = new javax.swing.JLabel();
        lista_ciudades = new javax.swing.JComboBox<>();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        btnExcel = new javax.swing.JButton();
        btnCsv = new javax.swing.JButton();
        btn_procesar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        importarDirs = new javax.swing.JToggleButton();
        btn_list = new javax.swing.JButton();
        checklist_dirs = new javax.swing.JLabel();
        btn_open1 = new javax.swing.JButton();
        lb_zonas = new javax.swing.JLabel();
        lb_zonasHistoric = new javax.swing.JLabel();
        btn_zonalHistoric = new javax.swing.JButton();
        btn_zonal = new javax.swing.JButton();
        lbProgreso = new javax.swing.JLabel();
        panelZonas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaZonas = new javax.swing.JTable();
        btnGuardarZonas = new javax.swing.JButton();
        panelHistoric = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jbGuardar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaDirecciones = new javax.swing.JTable();
        Ordenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lista_ciudades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciudad" }));
        lista_ciudades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lista_ciudadesItemStateChanged(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesamiento"));

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enruter/iconsexcel-48.png"))); // NOI18N
        btnExcel.setContentAreaFilled(false);
        btnExcel.setFocusPainted(false);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        btnCsv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CSV.png"))); // NOI18N
        btnCsv.setContentAreaFilled(false);
        btnCsv.setFocusPainted(false);
        btnCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCsvActionPerformed(evt);
            }
        });

        btn_procesar.setText("Procesar");
        btn_procesar.setFocusPainted(false);
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        btn_limpiar.setText("Limpiar");
        btn_limpiar.setFocusPainted(false);
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        importarDirs.setText("Procesar Base ");
        importarDirs.setFocusPainted(false);
        importarDirs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarDirsActionPerformed(evt);
            }
        });

        btn_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listActionPerformed(evt);
            }
        });

        checklist_dirs.setText("Listado Direcciones:");

        btn_open1.setText("...");

        lb_zonas.setText("Zonas");

        lb_zonasHistoric.setText("Zonas Historicas");
        lb_zonasHistoric.setPreferredSize(new java.awt.Dimension(29, 14));

        btn_zonalHistoric.setText("jButton1");
        btn_zonalHistoric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_zonalHistoricActionPerformed(evt);
            }
        });

        btn_zonal.setText("jButton1");
        btn_zonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_zonalActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(btnExcel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnCsv, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_procesar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_limpiar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(importarDirs, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_list, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(checklist_dirs, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_open1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lb_zonas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lb_zonasHistoric, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_zonalHistoric, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_zonal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(importarDirs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_procesar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGap(0, 12, Short.MAX_VALUE)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_list, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(btnCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(25, 25, 25))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lb_zonas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checklist_dirs, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_open1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_zonal, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btn_zonalHistoric, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lb_zonasHistoric, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importarDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_list, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checklist_dirs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_open1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_zonas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_zonal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_zonasHistoric, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_zonalHistoric, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_entrada)
                            .addComponent(lista_ciudades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_result, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HomeLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_zona, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(HomeLayout.createSequentialGroup()
                                        .addComponent(lb_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lbProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lista_ciudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_zona, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jTabbedPane1.addTab("Home", Home);

        tablaZonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre Zona", "Sector:Norte-sur-este-oeste", "Inicio Eje calles", "Fin Eje Calles", "Inicio Eje Carreras", "Fin Eje Carreras", "A", "B"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaZonas);
        if (tablaZonas.getColumnModel().getColumnCount() > 0) {
            tablaZonas.getColumnModel().getColumn(1).setResizable(false);
        }

        btnGuardarZonas.setText("Guardar Zonas");

        javax.swing.GroupLayout panelZonasLayout = new javax.swing.GroupLayout(panelZonas);
        panelZonas.setLayout(panelZonasLayout);
        panelZonasLayout.setHorizontalGroup(
            panelZonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
            .addGroup(panelZonasLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnGuardarZonas, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelZonasLayout.setVerticalGroup(
            panelZonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelZonasLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(btnGuardarZonas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Zonas", panelZonas);

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Direcciones", "Inicio", "Correccion", "Resultado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla1);

        jbGuardar.setText("Guardar Cambios");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHistoricLayout = new javax.swing.GroupLayout(panelHistoric);
        panelHistoric.setLayout(panelHistoricLayout);
        panelHistoricLayout.setHorizontalGroup(
            panelHistoricLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistoricLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHistoricLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
        );
        panelHistoricLayout.setVerticalGroup(
            panelHistoricLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistoricLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jbGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("NoProcesadas", panelHistoric);

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentHidden(evt);
            }
        });

        tablaDirecciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaDirecciones);

        Ordenar.setText("Ordenar");
        Ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Ordenar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Ordenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Direcciones", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
        // TODO add your handling code here:
    // try {
        procesar(); // TODO add your handling code here:
      /* }catch(Exception e){ 
           JOptionPane.showMessageDialog(null, e);
       }  */ 
    }//GEN-LAST:event_btn_procesarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        // TODO add your handling code here:
        txt_entrada.setText("");
        txt_result.setText("");
        lb_codigo.setText("");lb_zona.setText("");
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void importarDirsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarDirsActionPerformed
      try {
          // TODO add your handling code here:
          dirTest c = new dirTest();
          c.importarDirTest();
      } catch (IOException ex) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_importarDirsActionPerformed

    private void btn_zonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_zonalActionPerformed
      try {
          // TODO add your handling code here:
          baseZonas zn = new baseZonas();
          zn.importarZonas();
      } catch (IOException ex) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_btn_zonalActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txt_entrada.requestFocus();
        this.checklist_dirs.setText(ListaDirecciones.checklist);//
        if (baseZonas.zonasCargadas==true){this.lb_zonas.setText("Zonas cargadas");}else{this.lb_zonas.setText("Zonas Null");}//this.lb_zonas.setText();
        llenarCombo();//llena lista de ciudades//JOptionPane.showMessageDialog(null, ruta);
    }//GEN-LAST:event_formWindowOpened

    private void btn_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listActionPerformed
      try {
          dirTest d = new dirTest();// TODO add your handling code here:
          d.procesarLista();
      } catch (IOException ex) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_btn_listActionPerformed

    private void btn_zonalHistoricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_zonalHistoricActionPerformed
        // TODO add your handling code here:
         try {
          // TODO add your handling code here:
          historicZonas znh = new historicZonas();
          znh.importarZonasHistoric();
      } catch (IOException ex) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_btn_zonalHistoricActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     // String r= historicZonas.buscarZona(this.lb_codigo.getText());
      String r= historicZonas.buscarZonaProxi(this.lb_codigo.getText());
       JOptionPane.showMessageDialog(null, r);
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
       try{
           
        /*   tabla1.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent evento) {
             
            }
        });*/
        if (jTabbedPane1.getSelectedIndex()==2){
            // historicZonas.zonash.get(0); JOptionPane.showMessageDialog(null, historicZonas.baseZonasH[0][0]);
            DefaultTableModel model =  (DefaultTableModel) tabla1.getModel();
            //tabla1.setValueAt(23, 0, 0);
            Object nuevo[]= {"",};
            model.addRow(nuevo);//tablaZonas.setModel(model);
        }
         if (jTabbedPane1.getSelectedIndex()==3){
           llenarTable();
        }
       }catch(Exception e){
             JOptionPane.showMessageDialog(null, "Error: "+e);
    }//tablaDirecciones.removeRowSelectionInterval(0, tablaDirecciones.getRowCount());
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void llenarTable(){
          int cont=0;
             if(tablaDirecciones.getRowCount()!=0){}else{
             
           if(dirTest.listaDirecciones.size()<1){}else{
           
            DefaultTableModel model2 =  (DefaultTableModel) tablaDirecciones.getModel();
            for (Object i: dirTest.listaDirecciones ) {
            Object nuevo[]= {dirTest.listaDirecciones.get(cont).cadena,dirTest.listaDirecciones.get(cont).codigo,dirTest.listaDirecciones.get(cont).direccion,dirTest.listaDirecciones.get(cont).valorNum};
            model2.addRow(nuevo);cont++;
              }//JOptionPane.showMessageDialog(null,dirTest.listaDirecciones.get(1).X1);
             }
            }
    }
    private void limpiarTable(){
        if(tablaDirecciones.getRowCount()==0){}else{
        Collections.sort(listaDirecciones,new CompararIdZonas());//LINEA QUE ORDENA LAS DIRECCIONES POR CALLE Y CARRERA FALTA NUMERO
        DefaultTableModel model2 =  (DefaultTableModel) tablaDirecciones.getModel();// TODO add your handling code here:
        model2.setRowCount(0);
        }
    }
    private void llenarCombo(){
        String ciudDep, idCiud;
        if(ciudades.ciudades==null){ JOptionPane.showMessageDialog(null,"No Found Ciudades");}else{
        int cont=0;
       for (Object i: ciudades.ciudades){
          if(i==null){}else{ 
          String texto[]=  ciudades.ciudades.get(cont).split("-");
          ciudDep=texto[0].toLowerCase();idCiud=texto[1];//Integer.parseInt(texto[1]);
          ciudades.mapCiud.put(ciudDep, idCiud);//(ciudDep, idCiud);
           lista_ciudades.addItem(ciudades.ciudades.get(cont));cont++;
          }
        }
      }
    }
    
    private void jPanel1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentHidden
       limpiarTable();
    }//GEN-LAST:event_jPanel1ComponentHidden

    private void OrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenarActionPerformed
        limpiarTable();
        llenarTable();
    }//GEN-LAST:event_OrdenarActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
    // lbProcesando.setVisible(true);
        try {
          Excel ex = new Excel();
          
        // ajustaricon();//muestra gif de procesando
         // ex.importExcel();// TODO add your handling code here:
          ex.importExcel();
           descomponer.exportar_TextBasura(descomponer.garbagColect);
      } catch (IOException ex1) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex1);
      }
    }//GEN-LAST:event_btnExcelActionPerformed

    private void lista_ciudadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lista_ciudadesItemStateChanged
     
        int  item =  lista_ciudades.getSelectedIndex(),codigo;
      String cadena = (String) lista_ciudades.getSelectedItem();
     if (item<1){} else{
      if ((evt.getStateChange() == 1)) {
        String arr[] =  cadena.split("-");ciudades.ciudadGlobal = Integer.parseInt(arr[1]);
         JOptionPane.showMessageDialog(null, ciudades.ciudadGlobal);
      }
     }
    }//GEN-LAST:event_lista_ciudadesItemStateChanged
    
    private void btnCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCsvActionPerformed
            try {
          Excel ex = new Excel();
  
          ex.importCsv();
          llenarTable(descomponer.DirErrColect);//JOptionPane.showMessageDialog(null, descomponer.DirErrColect);
         descomponer.exportar_TextBasura(new String(descomponer.garbagColect.getBytes("ISO-8859-1"), "UTF-8"));// JOptionPane.showMessageDialog(null,descomponer.garbagColect);
      } catch (IOException ex1) {
          Logger.getLogger(form_geo.class.getName()).log(Level.SEVERE, null, ex1);
      }
    }//GEN-LAST:event_btnCsvActionPerformed
   
     //<editor-fold defaultstate="collapsed" desc="FUNCIONES Y CODIGOS JTABLE NOCORREGIDOS">
    private void llenarTable(String matrizDoComas){
        if("".equals(matrizDoComas)){return;}
        String segmentos[] = matrizDoComas.split(",");
        DefaultTableModel model =  (DefaultTableModel) tabla1.getModel();
        
        for(String seg:segmentos){
            String segmentos2[] = seg.split("\\.");
               if(!"".equals(seg)){ 
                Object nuevo[]={seg,segmentos2[0],"",""};
                model.addRow(nuevo);
               }
        }
        
    }
    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here: boton para la tabla de resultados con error XY y guargar una matriz dinamica de correccion personalizada por el usuario
        int filas = tabla1.getRowCount();//JOptionPane.showMessageDialog(null, );
        for (int cont=0; cont<filas;cont++){
            String err=String.valueOf(tabla1.getValueAt(cont,1));
              String dato=String.valueOf(tabla1.getValueAt(cont,2));
            if(tabla1.getValueAt(cont,3)==null){}else{      
               if((!"".equals(err))&&(!"".equals(dato))){      
                     JOptionPane.showMessageDialog(null,err +"#"+dato );
                 }
              } 
        }
    }//GEN-LAST:event_jbGuardarActionPerformed
      private void anadeListenerAlModelo(JTable tabla) {
        tabla.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent evento) {
               actualizartabla1(evento);
            }
        });
      }
      public void actualizartabla1(TableModelEvent evento){
           if (evento.getType() == TableModelEvent.UPDATE) {

            // Se obtiene el modelo de la tabla y la fila/columna que han cambiado.
            TableModel modelo = ((TableModel) (evento.getSource()));
            int fila = evento.getFirstRow();
            int columna = evento.getColumn();

            // Los cambios en la ultima fila y columna se ignoran.
            // Este return es necesario porque cuando nuestro codigo modifique
            // los valores de las sumas en esta fila y columna, saltara nuevamente
            // el evento, metiendonos en un bucle recursivo de llamadas a este
            // metodo.
            if (fila == 2 || columna == 3) {
                return;
            }
            
            updateCell();//JOptionPane.showMessageDialog(null,fila) ;
           }
      }
      private void updateCell(){
          int row = tabla1.getSelectedRow(); 
              String dir=String.valueOf(tabla1.getValueAt(row,0));
              String err=String.valueOf(tabla1.getValueAt(row,1));
              String dato=String.valueOf(tabla1.getValueAt(row,2));
              String mod=dir.replaceFirst(err+".", dato+".");
              tabla1.setValueAt(mod,row , 3);
      }
   //</editor-fold>   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_geo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_geo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_geo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_geo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_geo().setVisible(true);
             
            }
        });
    }
    
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Home;
    private javax.swing.JButton Ordenar;
    private javax.swing.JButton btnCsv;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnGuardarZonas;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_list;
    private javax.swing.JButton btn_open1;
    private javax.swing.JButton btn_procesar;
    private javax.swing.JButton btn_zonal;
    private javax.swing.JButton btn_zonalHistoric;
    private javax.swing.JLabel checklist_dirs;
    private javax.swing.JToggleButton importarDirs;
    private javax.swing.JButton jButton1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JLabel lbProgreso;
    private javax.swing.JLabel lb_codigo;
    private javax.swing.JLabel lb_zona;
    private javax.swing.JLabel lb_zonas;
    private javax.swing.JLabel lb_zonasHistoric;
    private javax.swing.JComboBox<String> lista_ciudades;
    private javax.swing.JPanel panelHistoric;
    private javax.swing.JPanel panelZonas;
    private javax.swing.JTable tabla1;
    private javax.swing.JTable tablaDirecciones;
    private javax.swing.JTable tablaZonas;
    private javax.swing.JTextField txt_entrada;
    private javax.swing.JTextField txt_result;
    // End of variables declaration//GEN-END:variables

}
 
